{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/index.js","../node_modules/dlv/index.js","ComponenteNomina/CrearNomina.js","ComponenteNomina/GenerarPeriodo.js","ComponenteNomina/NominaTrabajador.js","ComponenteNomina/ingresosNoFijos.js","ComponenteNomina/Deduccion.js","ComponenteNomina/TrabajadorNomina.js","ComponenteNomina/ContenedorNomina.js","nomina.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","applyRef","ref","value","current","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","shift","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","component","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","__ref","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","_dirty","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","callback","diff","merge","createRef","delve","CrearNomina","frecuenciasDePago","frecuenciaSeleccionada","seleccionFrecuenciaPago","Component","fetch","res","json","setState","catch","e","console","log","setFrecuencia","target","map","frec","nombre","GenerarPeriodo","super","inicioPeriodo","finPeriodo","errorMsg","generarPeriodoPago","setPeriodo","fechaFinPeriodo","Date","isNaN","getTime","diasAAgregar","frecuenciaDePago","setDate","getDate","toISOString","method","headers","body","JSON","stringify","NominaTrabajador","horasTrabajadas","horasExtra","valorVentas","crearNomina","Number","parseFloat","porcentajeComision","IngresosNoFijos","viatico","incentivo","handleClick","mandarAPadre","crearIngresosNoFijos","DeduccionNoFija","deduccionHorasRetraso","handleSubmit","crearDeduccionNoFija","TrabajadorNomina","fecha","mes","getMonth","paso","idNomina","idDeduccion","calIngresoNoFijo","crearNominaTrabajador","getHorasJornadaTrabajador","generarIngresosNoFijos","generarDeducciones","generarDeduccionesNoFijas","trabajador","idTrabajador","salarioPorHora","salario","periodo","salarioNumero","salarioPagado","reqBody","idPeriodoPago","fechaDeEmision","data","prevState","dates","jornadaLaboral","el","horaEntrada","horaSalida","setHours","split","getHours","reduce","acc","cur","horasJornada","salarioHorasExtra","pagoHorasExtras","toFixed","generarIngresosNoFijosVendedor","idIngresoNoFijo","pagaDeComision","requestBody","inss","idDeduccionNoFijo","pasoActual","apellido","cargo","ComponenteNomina","indiceTrabajadorActual","listaTrabajadores","Periodo","idPeriodo","avanzarPaso","setFrecuenciaDePago","setPeriodoPago","queryTrabajadores","avanzarTrabajador","inicio","fin","rootElement","querySelector"],"mappings":"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","file":"nomina.map","sourceRoot":"..","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import delve from 'dlv';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nexport default function linkState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? delve(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n","export default function dlv(obj, key, def, p) {\n\tp = 0;\n\tkey = key.split ? key.split('.') : key;\n\twhile (obj && p<key.length) obj = obj[key[p++]];\n\treturn obj===undefined ? def : obj;\n}","import { Component, h } from \"preact\";\nimport linkSate from 'linkstate'\n\nclass CrearNomina extends Component {\n  constructor() {\n    super();\n    this.state = {\n      frecuenciasDePago: [],\n      frecuenciaSeleccionada: ''\n    }\n    this.seleccionFrecuenciaPago = this.seleccionFrecuenciaPago.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/frecuenciaDePago\")\n      .then(res => res.json())\n      .then(frecuenciasDePago => {\n        this.setState({ frecuenciasDePago })\n      })\n      .catch(e => console.log(e))\n  }\n\n  seleccionFrecuenciaPago(e) {\n    this.props.setFrecuencia(e.target.value)\n  }\n  render(props, { frecuenciasDePago, frecuenciaSeleccionada }) {\n    console.log(frecuenciasDePago)\n    console.log(frecuenciaSeleccionada)\n    return (\n      <div>\n        <h1> Crear Nomina</h1>\n        <span>Seleccione la frecuencia de Pago </span>\n        {\n          frecuenciasDePago.map(frec =>\n            <button onClick={this.seleccionFrecuenciaPago} value={frec.nombre}>{frec.nombre}</button>)\n        }\n      </div>\n    )\n  }\n}\n\nexport default CrearNomina","import { Component, h } from 'preact'\nimport linkState from 'linkstate'\nclass GenerarPeriodo extends Component {\n  constructor() {\n    super()\n    this.super = {\n      inicioPeriodo: '',\n      finPeriodo: '',\n      errorMsg: ''\n    }\n    this.generarPeriodoPago = this.generarPeriodoPago.bind(this)\n  }\n\n  generarPeriodoPago() {\n    const { inicioPeriodo } = this.state\n    const { setPeriodo } = this.props\n    console.log(setPeriodo)\n    console.log(this.props)\n\n    const fechaFinPeriodo = new Date(inicioPeriodo)\n    if (isNaN(fechaFinPeriodo.getTime())) {\n      this.setState({ errorMsg: 'Fecha No introducida' })\n      return;\n    } else {\n      this.setState({ errorMsg: '' })\n\n    }\n    const diasAAgregar = this.props.frecuenciaDePago == 'Quincenal' ? 15 : 30\n    fechaFinPeriodo.setDate(fechaFinPeriodo.getDate() + diasAAgregar)\n    const finPeriodo = fechaFinPeriodo.toISOString().slice(0, 10)\n    console.log(\"Voy a hacer un fetch\")\n    fetch(\"http://localhost:3000/api/periodoPago/create\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        {\n          inicioPeriodo,\n          finPeriodo\n        }\n      )\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res)\n        setPeriodo({ ...res, inicioPeriodo, finPeriodo })\n      })\n      .catch(e => console.log(e))\n  }\n\n  render(props, { errorMsg }) {\n    return (\n      <div>\n        <h1 class=\"display-4\">Seleccione el Inicio  del Periodo de Pago de las nominas</h1>\n        <input required type=\"date\" name=\"inicioPeriodo\" onChange={linkState(this, 'inicioPeriodo')}></input>\n        {\n          errorMsg && <h4>{errorMsg}</h4>\n        }\n        <button onClick={this.generarPeriodoPago}>Crear Periodo</button>\n      </div>\n    )\n  }\n\n}\n\nexport default GenerarPeriodo","import { Component, h } from 'preact'\nimport linkState from 'linkstate'\n\nclass NominaTrabajador extends Component {\n  constructor() {\n    super()\n    this.state = {\n      horasTrabajadas: 0,\n      horasExtra: 0,\n      valorVentas: 0\n    }\n    this.crearNomina = this.crearNomina.bind(this)\n  }\n  crearNomina() {\n    const { horasExtra, horasTrabajadas, valorVentas } = this.state\n    this.props.crearNomina({\n      horasExtra: Number.parseFloat(horasExtra), horasTrabajadas: Number.parseFloat(horasTrabajadas), valorVentas: Number.parseFloat(valorVentas)\n    })\n\n  }\n\n\n  render({ porcentajeComision }, { horasExtra, horasTrabajadas, valorVentas }) {\n    return (<div>\n      <label for=\"horasTrabajadas\">Horas Trabajadas</label>\n      <input type=\"number\" step=\"any\" name=\"horasTrabajadas\" placeholder=\"Horas Trabajadas\" value={horasTrabajadas} onInput={linkState(this, 'horasTrabajadas')} ></input>\n      <label for=\"horasTrabajadas\">Horas Extra</label>\n      <input type=\"number\" step=\"any\" name=\"horasExtra\" placeholder=\"Horas Extra\" value={horasExtra} onInput={linkState(this, 'horasExtra')} ></input>\n      {\n        porcentajeComision &&\n        (\n          <div>\n            <label for=\"horasTrabajadas\">Ventas Realizadas</label>\n            <input type=\"number\" step=\"any\" name=\"comision\" placeholder=\"Ventas Realizadas\" value={valorVentas} onInput={linkState(this, 'valorVentas')} ></input>\n          </div>\n        )\n      }\n\n      <button onClick={this.crearNomina}>Siguiente</button>\n\n    </div>)\n  }\n}\n\nexport default NominaTrabajador","import { Component, h } from \"preact\";\nimport linkState from \"linkstate\";\n\nclass IngresosNoFijos extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      viatico: 0,\n      incentivo: 0\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.mandarAPadre = this.mandarAPadre.bind(this)\n  }\n\n  handleClick() {\n    const { viatico, incentivo } = this.state\n    console.log(\"Reset Ingreso No Fijo\")\n    this.setState({ viatico: 0, incentivo: 0 }, () => {\n      this.mandarAPadre({ viatico, incentivo })\n    })\n\n\n  }\n  mandarAPadre({ viatico, incentivo }) {\n    this.props.crearIngresosNoFijos({\n      viatico: Number.parseFloat(viatico),\n      incentivo: Number.parseFloat(incentivo)\n    })\n  }\n\n  render({ porcentajeComision }, { incentivo, viatico\n     }) {\n    return (\n      <div>\n        <label for=\"viatico\">Viatico</label>\n        <input name=\"viatico\" value={viatico}type=\"number\" step=\"any\" placeholder=\"Viatico\" onChange={linkState(this, 'viatico')} />\n        <label for=\"incentivo\">Bono</label>\n        <input name=\"incentivo\" value={incentivo }type=\"number\" step=\"any\" placeholder=\"Incentivo\" onChange={linkState(this, 'incentivo')} />\n        <button onClick={this.handleClick} > Siguiente</button>\n      </div>\n    )\n  }\n}\n\nexport default IngresosNoFijos","import { Component, h } from \"preact\";\nimport linkState from \"linkstate\";\n\nclass DeduccionNoFija extends Component {\n  constructor() {\n    super()\n    this.state = {\n      deduccionHorasRetraso: 0\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  handleSubmit() {\n    this.props.crearDeduccionNoFija({ deduccionHorasRetraso: Number.parseFloat(this.state.deduccionHorasRetraso) })\n    this.setState({ deduccionHorasRetraso: 0 })\n  }\n  render() {\n    return (\n      <div>\n        <label for=\"deduccionHorasRetraso\">Deduccion Horas Retraso</label>\n        <input type=\"number\" step=\"any\" name=\"deduccionHorasRetraso\" placeholder=\"Deduccion Horas Retraso\" onChange={\n          linkState(this, 'deduccionHorasRetraso')\n        }></input>\n        <button onClick={this.handleSubmit}>Guardar</button>\n      </div>\n    )\n  }\n}\n\nexport default DeduccionNoFija","import { Component, h } from 'preact'\nimport linkState from 'linkstate'\nimport NominaTrabajador from './NominaTrabajador';\nimport IngresosNoFijo from './ingresosNoFijos';\nimport DeduccionNoFija from './Deduccion';\n\nclass TrabajadorNomina extends Component {\n  constructor() {\n    super()\n    this.state = {\n      fecha: new Date(),\n      mes: new Date().getMonth(),\n      paso: 0,\n      idNomina: 0,\n      idDeduccion: 0,\n      calIngresoNoFijo: {\n        horasExtra: 0,\n        valorVentas: 0\n      }\n    }\n    this.crearNominaTrabajador = this.crearNominaTrabajador.bind(this)\n    this.getHorasJornadaTrabajador = this.getHorasJornadaTrabajador.bind(this)\n    this.generarIngresosNoFijos = this.generarIngresosNoFijos.bind(this)\n    this.generarDeducciones = this.generarDeducciones.bind(this)\n    this.generarDeduccionesNoFijas = this.generarDeduccionesNoFijas.bind(this)\n  }\n\n\n\n  crearNominaTrabajador({ horasTrabajadas, horasExtra, valorVentas }) {\n    const { idTrabajador, salarioPorHora, salario, porcentajeComision } = this.props.trabajador\n    const { periodo } = this.props\n    const salarioNumero = Number.parseFloat(salario)\n    const salarioPagado = salarioPorHora != 1 ? salarioNumero : salarioNumero * horasTrabajadas\n    const { fecha } = this.state\n    const reqBody = {\n      idTrabajador,\n      idPeriodoPago: periodo,\n      fechaDeEmision: fecha.toISOString().slice(0, 10),\n      salarioPagado\n    }\n\n    fetch('http://localhost:3000/api/nomina/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqBody)\n    }).then(res => res.json())\n      .then(data => {\n        console.log(\"Nomina\")\n        console.log(data)\n        this.setState((prevState) => ({\n          paso: ++prevState.paso,\n          idNomina: data.idNomina,\n          calIngresoNoFijo: {\n            horasExtra,\n            valorVentas\n          }\n\n        }), () => console.log(this.state))\n      })\n      .catch(e => console.log(e))\n\n  }\n  getHorasJornadaTrabajador() {\n\n    return fetch(`http://localhost:3000/api/trabajador/${this.props.trabajador.idTrabajador}?nomina=true`)\n      .then(res => res.json())\n      .then(data => {\n        let dates = data.map(el => {\n          const horaEntrada = new Date()\n          const horaSalida = new Date()\n          horaSalida.setHours(...(el.horaSalida.split(\":\")))\n          horaEntrada.setHours(...(el.horaEntrada.split(\":\")))\n          return horaSalida.getHours() - horaEntrada.getHours()\n        })\n        const jornadaLaboral = dates.reduce((acc, cur) => acc + cur, 0)\n        console.log(\"Jornadas Laboral\" + jornadaLaboral)\n        return jornadaLaboral\n      })\n  }\n\n  generarIngresosNoFijos({ viatico, incentivo }) {\n    const { idNomina, calIngresoNoFijo } = this.state\n    const { salario, porcentajeComision } = this.props.trabajador\n    console.log(porcentajeComision)\n    console.log(\"Incentivo 1 \")\n    console.log(incentivo)\n    let idIngresoNoFijo\n    // Fetch para crear los ingresos no Fijos (viatico, incentivo y pagoHorasExtras)\n    this.getHorasJornadaTrabajador()\n      .then(horasJornada => {\n        const salarioHorasExtra = Number.parseFloat(salario) / (horasJornada * 30)\n        const pagoHorasExtras = Number.parseFloat((calIngresoNoFijo.horasExtra * (2 * salarioHorasExtra)).toFixed(2))\n        console.log(\"Incentivo 2 \")\n        console.log(incentivo)\n        fetch(\"http://localhost:3000/api/nomina/ingresosNoFijos\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            idNomina,\n            viatico,\n            incentivo,\n            pagoHorasExtras\n          })\n        }).then(res => res.json())\n          .then(data => {\n            console.log(data)\n            console.log(porcentajeComision)\n            if (porcentajeComision) {\n              this.generarIngresosNoFijosVendedor(data)\n            } else {\n              this.generarDeducciones()\n            }\n            return;\n          })\n          .catch(e => console.log(e))\n\n      })\n\n\n  }\n  generarIngresosNoFijosVendedor({ idIngresoNoFijo }) {\n    const { porcentajeComision } = this.props.trabajador\n    const { valorVentas } = this.state.calIngresoNoFijo\n    console.log(\"IngresosNoFijoVendedor\")\n    console.log(porcentajeComision)\n    console.log(valorVentas)\n\n    fetch(\"http://localhost:3000/api//nomina/ingresosNoFijos/vendedor\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        idIngresoNoFijo,\n        pagaDeComision: valorVentas * (porcentajeComision / 100)\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.idIngresoNoFijo) this.generarDeducciones()\n      })\n\n  }\n  generarDeducciones() {\n    let { salario, idTrabajador, frecuenciaDePago } = this.props.trabajador\n    const { idNomina } = this.state\n    salario = Number.parseFloat(salario)\n    let value = (salario * 0.0625).toFixed(2)\n    const inss = Number.parseFloat(value)\n    const requestBody = {\n      inss,\n      salario,\n      idTrabajador,\n      idNomina,\n      frecuenciaDePago\n    }\n    console.log(requestBody)\n    console.log(`Salario ${typeof salario} , idTrabajador ${typeof idTrabajador}\n     frecuenciaDePago ${typeof frecuenciaDePago}`)\n    fetch(\"http://localhost:3000/api/nomina/deduccion\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // { idNomina, inss, idTrabajador, salario, frecuenciaDePago }\n      body: JSON.stringify(requestBody)\n    })\n      .then(res => res.json())\n      .then(data => this.setState((prevState) => ({\n        paso: ++prevState.paso,\n        idDeduccion: data.idDeduccion\n      })))\n\n  }\n  generarDeduccionesNoFijas({ deduccionHorasRetraso }) {\n    const { idDeduccion } = this.state\n    fetch(\"http://localhost:3000/api/nomina/deduccionNoFija\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        idDeduccion,\n        deduccionHorasRetraso\n      })\n    }).then(res => res.json())\n      .then(data => {\n        console.log(data.idDeduccionNoFijo)\n        this.setState({\n          paso: 0,\n          idDeduccion: 0,\n          idNomina: 0,\n          calIngresoNoFijo: {\n            horasExtra: 0,\n            valorVentas: 0\n          }\n\n        })\n        this.props.next()\n      })\n      .catch(e => console.log(e))\n\n  }\n\n  generarDeduccionesPrestamos() {\n    const { idTrabajador } = this.props.trabajador\n    fetch(`http://localhost:3000/api/prestamo/trabajador/${idTrabajador}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.length > 0) {\n          /*Todo */\n\n        }\n      })\n  }\n\n  render({ trabajador, next }, { paso }) {\n    const { nombre, apellido, cargo, porcentajeComision } = trabajador\n    let pasoActual\n    switch (paso) {\n      case 0:\n        pasoActual = <NominaTrabajador porcentajeComision={porcentajeComision} crearNomina={this.crearNominaTrabajador} />\n        break;\n      case 1: {\n        pasoActual = <IngresosNoFijo crearIngresosNoFijos={this.generarIngresosNoFijos} porcentajeComision={porcentajeComision} />\n        break;\n      }\n      case 2: {\n        pasoActual = <DeduccionNoFija crearDeduccionNoFija={this.generarDeduccionesNoFijas} />\n        break;\n      }\n    }\n    return (\n      <div>\n        {\n          nombre ? (\n            <div>\n              <h2>{`${nombre} ${apellido}`}</h2>\n              <h4>{cargo}</h4>\n              {pasoActual}\n            </div >) : (<div>\n              <h2> No existen trabajadores para este periodo </h2>\n            </div>)\n        }\n      </div>\n    )\n  }\n}\n\nexport default TrabajadorNomina","import { Component, h } from 'preact'\nimport CrearNomina from './CrearNomina'\nimport GenerarPeriodo from './GenerarPeriodo'\nimport TrabajadorNomina from './TrabajadorNomina'\n\n\nclass ComponenteNomina extends Component {\n  constructor() {\n    super()\n    this.state = {\n      frecuenciaDePago: '',\n      paso: 0,\n      indiceTrabajadorActual: 0,\n      listaTrabajadores: [],\n      Periodo: {\n        idPeriodo: 0,\n        inicioPeriodo: 0,\n        finPeriodo: 0\n      }\n\n    }\n    this.avanzarPaso = this.avanzarPaso.bind(this)\n    this.setFrecuenciaDePago = this.setFrecuenciaDePago.bind(this)\n    this.setPeriodoPago = this.setPeriodoPago.bind(this)\n    this.queryTrabajadores = this.queryTrabajadores.bind(this)\n    this.avanzarTrabajador = this.avanzarTrabajador.bind(this)\n  }\n\n  avanzarPaso() {\n    this.setState((prevState) => ({\n      paso: ++prevState.paso\n    }))\n  }\n  avanzarTrabajador() {\n    this.setState((prevState) => {\n      console.log(prevState)\n      console.log(\"Indice \", prevState.indiceTrabajadorActual)\n      console.log(\"Length\", prevState.listaTrabajadores.length)\n      console.log(\"Indice Al que Vamos \", prevState.indiceTrabajadorActual + 1)\n\n      if (prevState.indiceTrabajadorActual + 1 >= prevState.listaTrabajadores.length) {\n        return ({\n          ...prevState,\n          paso: ++prevState.paso\n        })\n      } {\n        return ({ indiceTrabajadorActual: ++prevState.indiceTrabajadorActual })\n      }\n\n    })\n  }\n\n  setFrecuenciaDePago(frecuenciaDePago) {\n    this.setState({ frecuenciaDePago }, () => this.avanzarPaso())\n  }\n\n  setPeriodoPago(Periodo) {\n    this.setState({ Periodo }, () => this.queryTrabajadores())\n  }\n  queryTrabajadores() {\n    const { frecuenciaDePago, Periodo: { inicioPeriodo, finPeriodo } } = this.state\n\n    console.log(\"Cargando Trabajadores\")\n    fetch(\"http://localhost:3000/api/crearNomina/trabajadores\", {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        frecuenciaDePago,\n        inicio: new Date(...(inicioPeriodo.split(\"-\"))).getDate(),\n        fin: new Date(...(finPeriodo.split(\"-\"))).getDate()\n      })\n\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          listaTrabajadores: data\n        }, this.avanzarPaso())\n      }).catch()\n  }\n  render(props, { frecuenciaDePago,\n    paso,\n    indiceTrabajadorActual,\n    listaTrabajadores,\n    Periodo }\n  ) {\n    let pasoActual\n    switch (paso) {\n      case 0: {\n        pasoActual = <CrearNomina setFrecuencia={this.setFrecuenciaDePago} />\n        break;\n      }\n      case 1: {\n        pasoActual = <GenerarPeriodo setPeriodo={this.setPeriodoPago} frecuenciaDePago={frecuenciaDePago} />\n        break;\n      }\n      case 2: {\n        console.log(this.state)\n        pasoActual = <TrabajadorNomina trabajador={listaTrabajadores[indiceTrabajadorActual]} next={this.avanzarTrabajador} periodo={Periodo.idPeriodoPago} />\n        break;\n      }\n      default: {\n        pasoActual = (() => (\n          <div>\n            <h3>Nominas Generadas Correctamente</h3>\n          </div>\n        ))()\n        break;\n      }\n    }\n\n    console.log(listaTrabajadores)\n    console.log(\"Indice Trabajador Actual\", indiceTrabajadorActual)\n    console.log(\"Trabajador Actual\")\n    console.log(listaTrabajadores[indiceTrabajadorActual])\n    return (\n      <section >\n        {pasoActual}\n      </section>\n    )\n\n  }\n}\n\nexport default ComponenteNomina","import { render, h } from 'preact'\nimport Contenedor from './ComponenteNomina/ContenedorNomina'\nconst rootElement = document.querySelector('#root')\nrender(<Contenedor />, rootElement, rootElement.firstChild);"]}